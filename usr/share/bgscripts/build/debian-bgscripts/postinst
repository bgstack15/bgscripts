# deb postinst 2018-02-23
# Deploy icons
which xdg-icon-resource 1>/dev/null 2>&1 &&
{

   # Deploy default application icons
   for theme in hicolor locolor Numix-Circle Lubuntu ;
   do

      shape=square
      case "${theme}" in Numix-Circle) shape=circle;; Lubuntu) shape=Lubuntu;; esac

      # Deploy scalable application icons
      cp -p /usr/share/bgscripts/gui/icons/apps/rdp-${shape}.svg /usr/share/icons/${theme}/scalable/apps/rdp.svg

      # Deploy size application icons
      for size in 16 24 32 48 64 ;
      do
         xdg-icon-resource install --context apps --size "${size}" --theme "${theme}" --novendor --noupdate /usr/share/bgscripts/gui/icons/apps/rdp-${shape}-${size}.png rdp &
      done
   done

   # Deploy custom application icons
   # custom: Numix-Circle apps 48 uses svg
   cp -p /usr/share/bgscripts/gui/icons/apps/rdp-circle.svg /usr/share/icons/Numix-Circle/48/apps/rdp.svg
   ## custom: Lubuntu has a different directory structure and may not work in the normal way.
   #for size in 16 24 32 48 64; do cp -p "/usr/share/bgscripts/gui/icons/apps/rdp-Lubuntu-${size}.png" "/usr/share/icons/Lubuntu/apps/${size}/rdp.png"; done

   # Deploy default mimetype icons
   for them in hicolor Numix Lubuntu elementary-xfce;
   do

      # Deploy scalable mimetype icons
      cp -p /usr/share/bgscripts/gui/icons/mimetypes/application-x-rdp-${theme}.svg /usr/share/icons/${theme}/scalable/mimetypes/application-x-rdp.svg

      # Deploy size mimetype icons
      for size in 16 24 32 48 64 ;
      do
         xdg-icon-resource install --context mimetypes --size "${size}" --theme "${theme}" --novendor --noupdate /usr/share/bgscripts/gui/icons/mimetypes/application-x-rdp-${theme}-${size}.png application-x-rdp &
      done
      
   done

   # Deploy custom mimetype icons
   # custom: Numix
   cp -p /usr/share/bgscripts/gui/icons/mimetypes/application-x-rdp-Numix.svg /usr/share/icons/Numix/48/mimetypes/application-x-rdp.svg

   # Update icon caches
   xdg-icon-resource forceupdate &
   for word in hicolor locolor Numix-Circle Numix Lubuntu elementary-xfce;
   do
      touch --no-create /usr/share/icons/${word}
      gtk-update-icon-cache /usr/share/icons/${word} &
   done

} 1>/dev/null 2>&1 &

# Deploy desktop files
{

   # rdp application
   desktop-file-install --rebuild-mime-info-cache /usr/share/bgscripts/gui/rdp.desktop

   # resize utility
   if { which virt-what && test -n "$( virt-what )"; } || test -f /usr/bin/spice-vdagent;
   then
      desktop-file-install /usr/share/bgscripts/gui/resize.desktop
   fi

} 1>/dev/null 2>&1 &

# Mimetypes and default applications
which xdg-mime 1>/dev/null 2>&1 &&
{
   for user in $( /usr/share/bgscripts/enumerate-users.sh ) ;
   do

      # Skip non-user objects
      ! getent passwd "${user}" && continue

      # Add new mimetypes 
      su "${user}" -c "xdg-mime install /usr/share/bgscripts/gui/x-rdp.xml &" &

      while read line;
      do
         echo "${user} ${line}"

         # Assign mimetype a default application
         su "${user}" -c "test -f ~/.config/mimeapps.list && xdg-mime default rdp.desktop ${line} &" &

         # Deprecated
         #which gio && su "${user}" -c "test -f ~/.config/mimeapps.list && gio mime ${line} rdp.desktop &" &

      done <<'EOW'
application/x-rdp
EOW

         # Update mimetype database
         which update-mime-database &&
         {
            case "${user}" in
               root) update-mime-database /usr/share/mime;;
               *) su "${user}" -c "update-mime-database ~${user}/.local/share/mime &" & ;;
            esac
         }

   done
} 1>/dev/null 2>&1 &

# deploy systemd files
{
if test "$1" = "configure";
then
   # Initial installation
   
   # If systemd then install unit files
   if test "$( ps --no-headers -o comm 1 )" = "systemd";
   then
      install -m 0644 -o root -p -t "/lib/systemd/system/" "/usr/share/bgscripts/inc/systemd/monitor-resize.service" || :
      install -m 0644 -o root -p -t "/lib/systemd/system-preset/" "/usr/share/bgscripts/inc/systemd/80-monitor-resize.preset" || :
      __thisfunction() {
         systemctl daemon-reload; systemctl --no-reload preset monitor-resize.service;
      }
      __thisfunction &
   fi

fi
} 1>/dev/null 2>&1 &

exit 0
